name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  # Web Deploy için GitHub Pages
  web-deploy:
    name: Deploy Web App
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './app/v2'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Windows Desktop App Build
  build-windows:
    name: Build Windows App
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        run: npm run build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mudek-windows
          path: |
            dist/*.exe
            dist/*.blockmap
            dist/latest.yml

  # Auto Release (sadece main branch push)
  auto-release:
    name: Auto Release
    needs: [web-deploy, build-windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Generate Version Tag
      id: version
      run: |
        BUILD_DATE=$(date +'%Y.%m%d')
        BUILD_TIME=$(date +'%H%M')
        BUILD_NUM=$(printf "%04d" ${{ github.run_number }})
        VERSION_TAG="v${BUILD_DATE}.${BUILD_TIME}.${BUILD_NUM}"
        echo "version=${VERSION_TAG}" >> $GITHUB_OUTPUT
        echo "Generated version: ${VERSION_TAG}"
        
    - name: Create and Push Tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ steps.version.outputs.version }}
        git push origin ${{ steps.version.outputs.version }}
      
    - name: Download Windows Artifacts
      uses: actions/download-artifact@v4
      with:
        name: mudek-windows
        path: ./release-assets/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: MUDEK Ders Değerlendirme Sistemi ${{ steps.version.outputs.version }}
        files: |
          release-assets/*.exe
          release-assets/*.blockmap
          release-assets/latest.yml
        draft: false
        prerelease: false
        body: |
          ## 🚀 MUDEK Ders Değerlendirme Sistemi ${{ steps.version.outputs.version }}
          
          ### 📱 CORUH ARGE Logosu ile Windows Masaüstü Uygulaması
          
          **Build Bilgileri:**
          - Build Tarihi: $(date +'%Y-%m-%d')
          - Build Numarası: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
          
          **Özellikler:**
          - 🏢 CORUH ARGE logosu ve branding
          - 🎓 MUDEK ders değerlendirme sistemi
          - 💾 Native Windows dosya işlemleri
          - ⌨️ Klavye kısayolları (Ctrl+O, Ctrl+S)
          - 🌐 Web versiyonu: https://coruhtech.github.io/mudek-ders-degerlendirme-formu/app/v2/
          
          **Geliştirici:** Dr. Öğr. Üyesi Uğur CORUH  
          **Firma:** CORUH ARGE VE TEKNOLOJİ SANAYİ TİCARET LİMİTED ŞİRKETİ  
          **Web:** [www.coruh.com.tr](https://www.coruh.com.tr)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Manuel Release (tag ile)
  manual-release:
    name: Manual Tagged Release
    needs: [web-deploy, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
    - name: Download Windows Artifacts
      uses: actions/download-artifact@v4
      with:
        name: mudek-windows
        path: ./release-assets/
        
    - name: Create Manual Release
      uses: softprops/action-gh-release@v1
      with:
        name: MUDEK Ders Değerlendirme Sistemi ${{ github.ref_name }}
        files: |
          release-assets/*.exe
          release-assets/*.blockmap
          release-assets/latest.yml
        draft: false
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
        body: |
          ## 🎓 MUDEK Ders Değerlendirme Sistemi ${{ github.ref_name }}
          
          **Manuel Release - CORUH ARGE Logosu ile**
          
          RTEÜ MUDEK ders değerlendirme ve akreditasyon sistemi masaüstü uygulaması.
          
          **Özellikler:**
          - CORUH ARGE kurumsal logosu ve tasarım
          - Native Windows uygulaması
          - Dosya aç/kaydet native dialog'ları  
          - Klavye kısayolları desteği
          - MUDEK kriterlerine uygun değerlendirme sistemi
          
          **Web Versiyonu:** https://coruhtech.github.io/mudek-ders-degerlendirme-formu/app/v2/
          
          **Geliştirici:** Dr. Öğr. Üyesi Uğur CORUH
          **İletişim:** ugur.coruh@erdogan.edu.tr
          **Web:** www.coruh.com.tr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 